{"version":3,"sources":["RoomReservationServices.js"],"names":["_token","require","axios","BASE_URL","createRoomReservation","roomPayload","response","regeneratorRuntime","async","_context","prev","next","awrap","post","headers","Access-Control-Allow-Origin","Access-Control-Allow-Headers","sent","abrupt","ok","data","t0","error","stop","getAllRoomsOfAHotel","hotelName","_context2","get","Authorization","getToken","getAllRoomsOfAReserver","reserver","_context3","getAllAvailableRoomsOfAHotel","_context4","getAllReservedRoomsOfAHotel","_context5","getRoomDetailsByDate","room","date","_context6","concat","getHotelRoomId","_context7","updateRoomReservationDetails","updatePayload","_context8","put","deleteRoom","_context9","delete"],"mappings":"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","file":"RoomReservationServices.min.js","sourcesContent":["import { getToken } from '../utils/token';\r\nconst axios = require('axios')\r\n\r\n\r\nconst BASE_URL = `http://localhost:4000/rooms`\r\n\r\nexport const createRoomReservation = async (roomPayload) => {\r\n\r\n    try {\r\n        const response = await axios.post(BASE_URL, roomPayload, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getAllRoomsOfAHotel = async (hotelName) => {\r\n\r\n    try {\r\n        const response = await axios.get(BASE_URL + \"/\" + hotelName, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getAllRoomsOfAReserver = async (reserver) => {\r\n\r\n    try {\r\n        const response = await axios.get(BASE_URL + \"/reserver/\" + reserver, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getAllAvailableRoomsOfAHotel = async (hotelName) => {\r\n\r\n    try {\r\n        const response = await axios.get(BASE_URL + \"/\" + hotelName + \"/available\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getAllReservedRoomsOfAHotel = async (hotelName) => {\r\n\r\n    try {\r\n        const response = await axios.get(BASE_URL + \"/\" + hotelName + \"/reserved\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getRoomDetailsByDate = async (hotelName, room, date) => {\r\n\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/${hotelName}/${room}/${date}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getHotelRoomId = async (hotelName, room) => {\r\n\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/${hotelName}/${room}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateRoomReservationDetails = async (hotelName, room, updatePayload) => {\r\n\r\n    try {\r\n        const response = await axios.put(`${BASE_URL}/${hotelName}/${room}`, updatePayload, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteRoom = async (hotelName, room) => {\r\n\r\n    try {\r\n        const response = await axios.delete(`${BASE_URL}/${hotelName}/${room}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        })\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n\r\n        }\r\n    } catch (error) {\r\n\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]}
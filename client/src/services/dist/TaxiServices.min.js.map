{"version":3,"sources":["TaxiServices.js"],"names":["_token","require","axios","BASE_URL","createTaxiReservation","taxiPayload","response","regeneratorRuntime","async","_context","prev","next","awrap","post","Access-Control-Allow-Origin","Access-Control-Allow-Headers","Authorization","getToken","sent","abrupt","ok","data","t0","headers","stop","getUserAllTaxiReservations","user","_context2","get","concat","error","getOneTaxiReservation","date","_context3","deleteTaxiReservation","_context4"],"mappings":"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","file":"TaxiServices.min.js","sourcesContent":["import { getToken } from '../utils/token';\r\nconst axios = require('axios')\r\n\r\nconst BASE_URL = `http://localhost:4000/taxis`\r\n\r\nexport const createTaxiReservation = async (taxiPayload) => {\r\n\r\n    try {\r\n        const response = await axios.post(BASE_URL, taxiPayload, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getUserAllTaxiReservations = async (user) => {\r\n\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/${user}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getOneTaxiReservation = async (user, date) => {\r\n\r\n    try {\r\n        const response = await axios.get(`${BASE_URL}/${user}/${date}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// export const updateTaxiReservation = async (user, date) => {\r\n\r\n//     try {\r\n//         const response = await axios.put(`${BASE_URL}/${user}/${date}`, updatePayload, {\r\n//             headers: {\r\n//                 'Access-Control-Allow-Origin': \"*\",\r\n//                 'Access-Control-Allow-Headers': \"Content-Type\",\r\n//                 'Authorization': 'Bearer ' + getToken()\r\n//             }\r\n//         });\r\n\r\n//         return {\r\n//             ok: true,\r\n//             data: response.data\r\n//         }\r\n//     } catch (error) {\r\n//         return {\r\n//             ok: false,\r\n//             error: error\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const deleteTaxiReservation = async (user, date) => {\r\n\r\n    try {\r\n        const response = await axios.delete(`${BASE_URL}/${user}/${date}`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Access-Control-Allow-Headers': \"Content-Type\",\r\n                'Authorization': 'Bearer ' + getToken()\r\n            }\r\n        });\r\n\r\n        return {\r\n            ok: true,\r\n            data: response.data\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            ok: false,\r\n            error: error\r\n        }\r\n    }\r\n}"]}